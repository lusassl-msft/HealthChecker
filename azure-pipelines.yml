# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: Health Checker Azure Pipeline
trigger:
  branches:
    include:
      - master
      - release

pool:
  vmImage: 'windows-2019'

steps:
- pwsh: | 

    cd .\.build
    
    $content = Get-Content .\Invoke-BuildPipeline.config.json
    $jsonConfig = $content | ConvertFrom-Json
    $scriptVersion = .\Get-ScriptVersion.ps1 -GitHubWebRequestUri $jsonConfig.ScriptUri -ScriptVersion $jsonConfig.ScriptVersion
    $tag = "v{0}.{1}.{2}" -f $scriptVersion.Major, $scriptVersion.Minor, $scriptVersion.BuildRevision
    Write-Host("New tag: {0}" -f $tag)

    .\Invoke-BuildPipeline.ps1 -CodeFormatCheck -ScriptVersion $scriptVersion

    Write-Host "##vso[task.setvariable variable=ReleaseTagValue]$tag"
    Write-Host "##vso[task.setvariable variable=BuildScriptLocation].\.build\dist\HealthChecker.ps1"
    $title = "{0} Release" -f $tag
    Write-Host "##vso[task.setvariable variable=ReleaseTitleValue]$title"

  displayName: "Setting Script Version and Running build pipeline"

- pwsh: |
    $scriptLocation = "$(BuildScriptLocation)"
    Write-Host("$scriptLocation")
    $hashValue = (Get-FileHash $scriptLocation -Algorithm SHA256).Hash
    
    $releaseInfo = @"

    SHA256: {0}

    How to Verify Hash Value: https://github.com/dpaulson45/HealthChecker/wiki/How-to-Verify-Hash-Value
    "@ -f $hashValue 

    Write-Host("$releaseInfo")
    $releaseInfo | Out-File .\.build\dist\ReleaseNotes.txt

    cp $scriptLocation $env:BUILD_ARTIFACTSTAGINGDIRECTORY

  displayName: "Setting Release Notes and Assets"

- pwsh: | 
    Get-ChildItem "$(Build.ArtifactStagingDirectory)"
    Get-Content .\.build\dist\ReleaseNotes.txt
  displayName: "Display Release Notes text"

- task: GitHubRelease@0
  displayName: 'Create GitHub Release'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
  inputs:
    gitHubConnection: github.com_dpaulson45
    repositoryName: dpaulson45/HealthChecker
    action: create
    tagSource: manual
    tagPattern: 'v[0-9].[0-9].[0-9]'
    tag: $(ReleaseTagValue)
    title: $(ReleaseTitleValue)
    releaseNotesSource: 'file'
    releaseNotesFile: .\.build\dist\ReleaseNotes.txt
    addChangeLog: true
    assets: $(Build.ArtifactStagingDirectory)\*